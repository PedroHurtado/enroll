openapi: 3.0.0
info:
  title: Enroll API
  version: 1.0.0
paths:
  /enrolls:
    get:
      summary: Obtener registros de inscripción con paginación y filtrado
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
            description: Página de resultados
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            description: Número de registros por página
        - name: name
          in: query
          required: false
          schema:
            type: string
            description: Filtrar por nombre de estudiante
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [active, inactive]
            description: Filtrar por estado de inscripción
      responses:
        '200':
          description: Lista de registros de inscripción con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Enroll'
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                      totalPages:
                        type: integer
                      totalItems:
                        type: integer
              example:
                data:
                  - identity: student
                    situation: married
                    custody: both
                    parentalAuthority: both
                    student:
                      email: "student@example.com"
                      phone: "123456789"
                pagination:
                  currentPage: 1
                  totalPages: 10
                  totalItems: 100
    post:
      summary: Crear un nuevo registro de inscripción
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enroll'
      responses:
        '201':
          description: Inscripción creada con éxito
  /enrolls/{id}/familysituation:
    put:
      summary: Actualizar situación familiar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  minItems: 1
                  description: Archivos relacionados con la situación familiar
              required:
                - files
      responses:
        '204':
          description: Situación familiar actualizada
  /enrolls/{id}/mother:
    put:
      summary: Actualizar datos de la madre
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Mother'
      responses:
        '204':
          description: Datos de la madre actualizados
  /enrolls/{id}/father:
    put:
      summary: Actualizar datos del padre
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Father'
      responses:
        '204':
          description: Datos del padre actualizados
  /enrolls/{id}/other:
    put:
      summary: Actualizar otros datos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Other'
      responses:
        '204':
          description: Otros datos actualizados
  /enrolls/{id}/health:
    put:
      summary: Actualizar datos de salud
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Health'
      responses:
        '204':
          description: Datos de salud actualizados
  /enrolls/{id}/confirm:
    put:
      summary: Confirmar datos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Confirm'
      responses:
        '204':
          description: Confirmación realizada
  /enrolls/{id}/subjects:
    put:
      summary: Actualizar asignaturas de un registro de inscripción
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subjects'
      responses:
        '204':
          description: Asignaturas actualizadas correctamente

components:
  schemas:
    Enroll:
      type: object
      properties:
        identity:
          type: string
          enum: [student, mother, father, guardian]
        situation:
          type: string
          enum: [single, married, divorced, widowed]
          nullable: true
        custody:
          type: string
          enum: [mother, father, both]
          nullable: true
        parentalAuthority:
          type: string
          enum: [mother, father, both]
          nullable: true
        student:
          type: object
          properties:
            email:
              type: string
              format: email
            phone:
              type: string
          required: [email, phone]
        mother:
          type: object
          properties:
            email:
              type: string
              format: email
            phone:
              type: string
          required: [email, phone]
        father:
          type: object
          properties:
            email:
              type: string
              format: email
            phone:
              type: string
          required: [email, phone]
        guardian:
          type: object
          properties:
            email:
              type: string
              format: email
            phone:
              type: string
          required:
            - email
            - phone
      required:
        - identity
        - student
      example:
        identity: student
        situation: married
        custody: both
        parentalAuthority: both
        student:
          email: "student@example.com"
          phone: "123456789"
        mother:
          email: "mother@example.com"
          phone: "987654321"
        father:
          email: "father@example.com"
          phone: "123498765"
        guardian:
          email: "guardian@example.com"
          phone: "321654987"
    Alumn:
      type: object
      properties:
        nre:
          type: string
        academic_record:
          type: array
          items:
            type: string
            format: binary
        healthcards_observe:
          type: string
          format: binary
        healthcards_reverse:
          type: string
          format: binary
      required:
        - nre
        - healthcards_observe
        - healthcards_reverse
    FilesArray:
      type: array
      items:
        type: string
        format: binary
      description: Archivos relacionados con situaciones o registros
    Other:
      type: object
      properties:
        school_insurance:
          type: array
          items:
            type: string
            format: binary
          description: Archivos relacionados con el seguro escolar
        ampa:
          type: array
          items:
            type: string
            format: binary
          description: Archivos relacionados con el AMPA
        school_transportation:
          type: array
          items:
            type: string
            format: binary
          description: Archivos relacionados con el transporte escolar
      required:
        - school_insurance
    Mother:
      type: object
      properties:
        dni_observe:
          type: string
          format: binary
        dni_reverse:
          type: string
          format: binary
      required:
        - dni_observe
        - dni_reverse
    Father:
      type: object
      properties:
        dni_observe:
          type: string
          format: binary
        dni_reverse:
          type: string
          format: binary
      required:
        - dni_observe
        - dni_reverse
    Health:
      type: object
      properties:
        condition1:
          type: boolean
          description: Condición 1, por defecto es false
        condition2:
          type: boolean
          description: Condición 2, por defecto es false
        condition3:
          type: boolean
          description: Condición 3, por defecto es false
        condition4:
          type: boolean
          description: Condición 4, por defecto es false
        files:
          type: array
          items:
            type: string
            format: binary
          nullable: true
          description: Archivos relacionados con el estado de salud
      required:
        - condition1
        - condition2
        - condition3
        - condition4
    Confirm:
      type: object
      properties:
        information:
          type: boolean
          description: Confirmación de la información proporcionada
          default: true
        publish:
          type: boolean
          description: Confirmación de la publicación de la información
          default: true
        exit:
          type: boolean
          description: Confirmación de salida o cancelación
          default: true
        legal:
          type: boolean
          description: Confirmación de cumplimiento legal
          default: true
        truthful:
          type: boolean
          description: Confirmación de veracidad de la información
          default: true
        oficial:
          type: boolean
          description: Confirmación de ser información oficial
          default: true
      required:
        - information
        - publish
        - exit
        - legal
        - truthful
        - oficial
      example:
        information: true
        publish: true
        exit: true
        legal: true
        truthful: true
        oficial: true
    Subject:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    Subjects:
      type: object
      properties:
        commons:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
          description: Asignaturas comunes
        compulsoryModality:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
          description: Asignaturas obligatorias de modalidad
        modalityElectives:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
          description: Asignaturas optativas de modalidad
        electives:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
          description: Asignaturas optativas
      required:
        - commons
        - compulsoryModality
        - modalityElectives
        - electives
      example:
        commons:
          - id: "a1234567-89ab-cdef-0123-456789abcdef"
            name: "Lengua y Literatura"
          - id: "b1234567-89ab-cdef-0123-456789abcdef"
            name: "Matemáticas"
        compulsoryModality:
          - id: "c1234567-89ab-cdef-0123-456789abcdef"
            name: "Física"
        modalityElectives:
          - id: "d1234567-89ab-cdef-0123-456789abcdef"
            name: "Arte"
        electives:
          - id: "e1234567-89ab-cdef-0123-456789abcdef"
            name: "Música"
